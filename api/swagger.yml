swagger: "2.0"
info:
  version: "1.0.0"
  title: "Inventory management"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/api/v1"
tags:
  - name: "Inventory"
  - name: "Location"
  - name: "ItemType"
  - name: "User"
  - name: "Transport Log"
  - name: Preset
  - name: "Checkin / Checkout"
schemes:
  - "http"
paths:
  /inventory:
    post:
      tags:
        - "Inventory"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: body
          name: inventory
          schema:
            $ref: "#/definitions/InventoryInput"
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Inventory"
        404:
          description: Inventory not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Invalid Input
          schema:
            $ref : "#/definitions/Error422Response"
        503:
          description: Server Error
          schema:
            $ref : "#/definitions/ErrorResponse"
  /inventory/{id}:
    get:
      tags:
        - "Inventory"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: id
          type: string
          required: true
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Inventory"
        404:
          description: Inventory not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Invalid Input
          schema:
            $ref : "#/definitions/Error422Response"
        503:
          description: Server Error
          schema:
            $ref : "#/definitions/ErrorResponse"
    delete:
      tags:
        - "Inventory"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: id
          type: string
          required: true
      responses:
        200:
          description: "successful operation"
        404:
          description: Inventory not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Invalid Input
          schema:
            $ref : "#/definitions/Error422Response"
        503:
          description: Server Error
          schema:
            $ref : "#/definitions/ErrorResponse"
    patch:
      tags:
        - "Inventory"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: id
          type: string
          required: true
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Inventory"
        404:
          description: Inventory not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Invalid Input
          schema:
            $ref : "#/definitions/Error422Response"
        503:
          description: Server Error
          schema:
            $ref : "#/definitions/ErrorResponse"
  /location:
    get:
      tags:
        - "Location"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/Location"
        404:
          description: location not exists
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: Server Error
          schema:
            $ref : "#/definitions/ErrorResponse"
    post:
      tags:
        - "Location"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: body
          name: location
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/LocationInput"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Location"
        422:
          description: Invalid Input
          schema:
            $ref : "#/definitions/Error422Response"
        503:
          description: Server Error
          schema:
            $ref : "#/definitions/ErrorResponse"
  /location/{id}:
    get:
      tags:
        - "Location"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: id
          type: string
          required: true
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Location"
        404:
          description: location not exists
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Invalid Input
          schema:
            $ref : "#/definitions/Error422Response"
        503:
          description: Server Error
          schema:
            $ref : "#/definitions/ErrorResponse"
    patch:
      tags:
        - "Location"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: id
          type: string
          required: true
        - in: body
          name: location
          schema:
            $ref: "#/definitions/LocationInput"
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Location"
        404:
          description: location not exists
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Invalid Input
          schema:
            $ref : "#/definitions/Error422Response"
        503:
          description: Server Error
          schema:
            $ref : "#/definitions/ErrorResponse"
    delete:
      tags:
        - "Location"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: id
          type: string
          required: true
      responses:
        200:
          description: "successful operation"
        404:
          description: location not exists
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Invalid Input
          schema:
            $ref : "#/definitions/Error422Response"
        503:
          description: Server Error
          schema:
            $ref : "#/definitions/ErrorResponse"
  /inventory/location/{locationId}:
    get:
      tags:
        - "Inventory"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: locationId
          type: string
          required: true
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/Inventory"
        404:
          description: location not exists
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Invalid Input
          schema:
            $ref : "#/definitions/Error422Response"
        503:
          description: Server Error
          schema:
            $ref : "#/definitions/ErrorResponse"
  /itemType:
    get:
      tags:
        - "ItemType"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/ItemType"
        503:
          description: Server Error
          schema:
            $ref : "#/definitions/ErrorResponse"
    post:
      tags:
        - "ItemType"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: body
          name: location
          schema:
            $ref: "#/definitions/ItemTypeInput"
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/ItemType"
        422:
          description: Invalid Input
          schema:
            $ref : "#/definitions/Error422Response"
        503:
          description: Server
          schema:
            $ref : "#/definitions/ErrorResponse"
  /itemType/{id}:
    get:
      tags:
        - "ItemType"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: id
          type: string
          required: true
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/ItemType"
        404:
          description: item type not exists
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: Server Error
          schema:
            $ref : "#/definitions/ErrorResponse"
    patch:
      tags:
        - "ItemType"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: id
          type: string
          required: true
        - in: body
          name: ItemType
          schema:
            $ref: "#/definitions/ItemTypeInput"
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/ItemType"
        404:
          description: item type not exists
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Invalid Input
          schema:
            $ref : "#/definitions/Error422Response"
        503:
          description: Server Error
          schema:
            $ref : "#/definitions/ErrorResponse"
    delete:
      tags:
        - "ItemType"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: id
          type: string
          required: true
      responses:
        200:
          description: "successful operation"
        404:
          description: item type not exists
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Invalid Input
          schema:
            $ref : "#/definitions/Error422Response"
        503:
          description: Server Error
          schema:
            $ref : "#/definitions/ErrorResponse"
  /inventory/itemType/{itemId}:
    get:
      tags:
        - "Inventory"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: itemId
          type: string
          required: true
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/ItemType"
        404:
          description: item type not exists
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: Server Error
          schema:
            $ref : "#/definitions/ErrorResponse"
  /preset:
    get:
      tags:
        - Preset
      produces:
        - application/json
      responses:
        200:
          description: Success List Preset
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/Preset"
        503:
          description: Server Error
          schema:
            $ref : "#/definitions/ErrorResponse"
    post:
      tags:
        - Preset
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: Preset
          schema:
            $ref: "#/definitions/PresetInput"
      responses:
        200:
          description: Success Create
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Preset"
        422:
          description: Invalid Input
          schema:
            $ref: "#/definitions/Error422Response"
  /preset/{presetId}:
    patch:
      tags:
        - Preset
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: presetId
          type: string
          required: true
        - in: body
          name: Preset
          schema:
            $ref: "#/definitions/PresetInput"
      responses:
        200:
          description: Successful Update Preset
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Preset"
        404:
          description: Preset not exists
          schema:
            $ref: "#/definitions/ErrorResponse"
        422:
          description: Invalid Input
          schema:
            $ref: "#/definitions/Error422Response"
        503:
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Preset
      produces:
        - application/json
      responses:
        200:
          description: Successful delete preset
  /transportLog:
    get:
      tags:
        - Transport Log
      produces:
        - application/json
      responses:
        200:
          description: Successful list Transport Log
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/TransportLog"
        503:
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /checkin:
    post:
      tags:
        - "Checkin / Checkout"
      parameters:
        - in: body
          name: checkInOutInput
          schema:
            $ref: "#/definitions/checkInOutInput"
      responses:
        201:
          description: Successful Checkin
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: "string"
        503:
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /checkOut:
    post:
      tags:
        - "Checkin / Checkout"
      parameters:
        - in: body
          name: checkInOutInput
          schema:
            $ref: "#/definitions/checkInOutInput"
      responses:
        201:
          description: Successful Checkout
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: "string"          
        503:
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user:
    get:
      tags:
        - User
      produces:
        - application/json
      responses:
        200:
          description: Successful list user
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/User"
        503:
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
        - User
      parameters:
        - in: body
          name: User
          schema:
            $ref: "#/definitions/UserInput"
      produces:
        - application/json
      responses:
        200:
          description: Successful Create user
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/User"
        422:
          description: Invalid Input
          schema:
            $ref: "#/definitions/Error422Response"
        503:
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user/{user}:
    get:
      tags:
        - User
      parameters:
        - name: user
          in: path
          type: string
          required: true
      produces:
        - application/json
      responses:
        200:
          description: Successful get user
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/User"
        404:
          description: User not exists
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      tags:
        - User
      parameters:
        - name: user
          in: path
          type: string
          required: true
      produces:
        - application/json
      responses:
        200:
          description: Successful update user
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/User"
        404:
          description: User not exists
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - User
      parameters:
        - name: user
          in: path
          type: string
          required: true
      produces:
        - application/json
      responses:
        200:
          description: "successful operation"
        404:
          description: user not exists
          schema:
            $ref: "#/definitions/ErrorResponse"
        422:
          description: Invalid Input
          schema:
            $ref: "#/definitions/Error422Response"
        503:
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"

definitions:
  PresetItemType:
    type: object
    properties:
      id:
        type: string
      count:
        type: integer
  Preset:
    type: object
    properties:
      id:
        type: string
      display_name:
        type: string
      item_types:
        type: array
        items:
          $ref: "#/definitions/PresetItemType"
  PresetInput:
    type: object
      properties:
        display_name:
          type: string
        item_types:
          type: array
          items:
            $ref: "#/definitions/PresetItemType"
  Inventory:
    type: "object"
    properties:
      id:
        type: "string"
      itemType:
        type: "string"
      location:
        type: "string"
      lastSeenTime:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
          - "STOCK"
          - "IN_USE"
          - "REPAIR"
          - "TRANSPORT"
  InventoryInput:
    type: "object"
    properties:
      itemType:
        type: "string"
      location:
        type: "string"
      status:
        type: "string"
        description: "Order Status"
        enum:
          - "STOCK"
          - "IN_USE"
          - "REPAIR"
          - "TRANSPORT"
  Location:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
  LocationInput:
    type: "object"
    properties:
      name:
        type: "string"
  ItemType:
    type: "object"
    required:
      - "name"
    properties:
      id:
        type: "string"
      name:
        type: "string"
        example: "doggie"
      description:
        type: "string"
  ItemTypeInput:
    type: "object"
    required:
      - "name"
    properties:
      name:
        type: "string"
        example: "doggie"
      description:
        type: "string"
  User:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: string
      name:
        type: string
  UserInput:
    type: object
    required:
      - name
    properties:
      name:
        type: string
  TransportLog:
    type: object
    required:
      - id
      - personInCharge
      - location
      - eventType
      - note
    properties:
      id:
        type: "string"
      personInCharge:
        type: "string"
      location:
        type: "string"
      eventType:
        type: "string"
      note:
        type: "string"
  checkInOutInput:
    type: object
    required:
      - personInCharge
      - location
      - eventType
      - note
    properties:
      personInCharge:
        type: "string"
      location:
        type: "string"
      eventType:
        type: "string"
      note:
        type: "string"    
  Error422Response:
    type: "object"
    properties:
      code:
        type: "string"
      massage:
        type: "string"
      params:
        type: "object"
  ErrorResponse:
    type: "object"
    properties:
      code:
        type: "string"
      massage:
        type: "string"
      params:
        type: "object"